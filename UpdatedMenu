import random

if __name__ == "__main__":
    while True:
        print("\n-- Main Menu --")

        menu_list = [
            ["Calculator", 1],
            ["TikTacToe", 2],
            ["Close Menu", 3]
        ]

        # Prints the menu options
        for option in menu_list:
            print(f"{option[-1]} : {option[0]}")

        # Forces user to enter a valid menu option
        while True:
            try:
                option_picked = int(input("\nWhat option would you like: "))
                if menu_list[0][-1] <= option_picked <= menu_list[2][-1]:
                    break
                else:
                    print("Enter a number between 1 and 3")
            except ValueError:
                print("Enter a number between 1 and 3")

        # START CALCULATOR
        if option_picked == menu_list[0][-1]:

            # Asks and checks for 1st number and converts to float
            while True:
                try:
                    first_num = input("First number: ")
                    first_num = float(first_num)
                    if isinstance(first_num, float):
                        break
                except ValueError:
                    print("Enter a valid number.\n")

            # Asks and checks for 2nd number and converts to float
            while True:
                try:
                    second_num = input("Second number: ")
                    second_num = float(second_num)
                    if isinstance(second_num, float):
                        break
                except ValueError:
                    print("Enter a valid number.\n")

            # Checks that user entered a valid operator
            while True:
                operator = input("+, -, *, or / : ")
                if operator == "+" or operator == "-" or operator == "*" or operator == "/":
                    break
                else:
                    print("Enter a valid operator.")
                    print()
                    input("Press any key to continue.\n")

            # Executes the math according to the operator
            if operator == "+":
                final_answer = first_num + second_num
                print(final_answer)
                input("Press any key to close.")
                running = False
            elif operator == "-":
                final_answer = first_num - second_num
                print(final_answer)
                input("Press any key to close.")
                running = False
            elif operator == "*":
                final_answer = first_num * second_num
                print(final_answer)
                input("Press any key to close.")
                running = False
            elif operator == "/":
                final_answer = first_num / second_num
                print(final_answer)
                input("Press any key to close.")
                running = False
            else:
                print("ERROR CODE 5")
                input("Press any key to close.")
                running = False

        # START TICTACTOE
        turn_counter = 0
        if option_picked == menu_list[1][-1]:
            grid = [1, 2, 3, 4, 5, 6, 7, 8, 9]
            is_turn = True
            won_game = False
            lost_game = False
            tied_game = False

            while True:
                turn_counter += 1
                # Prints TicTacToe grid
                print(f"\n{grid[0]} | {grid[1]} | {grid[2]}")
                print(f"{grid[3]} | {grid[4]} | {grid[5]}")
                print(f"{grid[6]} | {grid[7]} | {grid[8]}")

                # If you won it will end the game
                if won_game:
                    print("\nYou win!")
                    break

                # If you lost it will end the game
                if lost_game:
                    print("\nYou lose!")
                    break

                # Ties game if all squares are used and there is no winner
                if tied_game:
                    print("\nThe game is tied!")
                    break

                # Forces user to enter a number that correlates to a grid square from the list, on their turn only
                if is_turn:
                    while True:
                        try:
                            user_choice = int(input("Enter your choice: "))
                            if 1 <= user_choice <= 9:
                                user_choice -= 1
                            else:
                                print("Enter a number between 1 and 9.\n")
                                continue
                        except ValueError:
                            print("Enter a number.\n")
                            continue

                        # Print x as your option
                        if grid[user_choice] != "x" and grid[user_choice] != "o":
                            grid[user_choice] = "x"
                            break
                        else:
                            print("That number has already been picked!\n")
                            valid_choice = False

                # If it's not your turn, print o as the bots option
                bot_choice = None
                if not is_turn:
                    while True:
                        bot_choice = random.randint(0, 8)
                        if grid[bot_choice] != "x" and grid[bot_choice] != "o":
                            grid[bot_choice] = "o"
                            break

                you_win = False
                # Checks if you've won
                # 123
                if grid[0] == "x" and grid[1] == "x" and grid[2] == "x":
                    you_win = True
                # 147
                if grid[0] == "x" and grid[3] == "x" and grid[6] == "x":
                    you_win = True
                # 159
                if grid[0] == "x" and grid[4] == "x" and grid[8] == "x":
                    you_win = True
                # 258
                if grid[1] == "x" and grid[4] == "x" and grid[7] == "x":
                    you_win = True
                # 357
                if grid[2] == "x" and grid[4] == "x" and grid[6] == "x":
                    you_win = True
                # 369
                if grid[2] == "x" and grid[5] == "x" and grid[8] == "x":
                    you_win = True
                # 456
                if grid[3] == "x" and grid[4] == "x" and grid[5] == "x":
                    you_win = True
                # 789
                if grid[6] == "x" and grid[7] == "x" and grid[8] == "x":
                    you_win = True

                you_lose = False
                # Checks if you've lost
                # 123
                if grid[0] == "o" and grid[1] == "o" and grid[2] == "o":
                    you_lose = True
                # 147
                if grid[0] == "o" and grid[3] == "o" and grid[6] == "o":
                    you_lose = True
                # 159
                if grid[0] == "o" and grid[4] == "o" and grid[8] == "o":
                    you_lose = True
                # 258
                if grid[1] == "o" and grid[4] == "o" and grid[7] == "o":
                    you_lose = True
                # 357
                if grid[2] == "o" and grid[4] == "o" and grid[6] == "o":
                    you_lose = True
                # 369
                if grid[2] == "o" and grid[5] == "o" and grid[8] == "o":
                    you_lose = True
                # 456
                if grid[3] == "o" and grid[4] == "o" and grid[5] == "o":
                    you_lose = True
                # 789
                if grid[6] == "o" and grid[7] == "o" and grid[8] == "o":
                    you_lose = True

                # Prints what square the bot picked
                if not is_turn:
                    print(f"\nThe bot picked: {bot_choice + 1}")

                # Changes turn
                if is_turn:
                    is_turn = False
                elif not is_turn:
                    is_turn = True

                # After 9 loops, next loop will show tied game
                if turn_counter == 9:
                    tied_game = True

        # Close the program
        if option_picked == menu_list[2][-1]:
            print("Thanks for testing me!")
            input("\nPress any key to close.")
            break

        continue
